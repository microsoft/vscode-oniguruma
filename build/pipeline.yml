name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
  batch: true
  branches:
    include:
      - main
pr: none

resources:
  repositories:
    - repository: templates
      type: github
      name: microsoft/vscode-engineering
      ref: main
      endpoint: Monaco

parameters:
  - name: publishPackage
    displayName: ðŸš€ Publish vscode-oniguruma
    type: boolean
    default: false

extends:
  template: azure-pipelines/npm-package/pipeline.yml@templates
  parameters:
    npmPackages:
      - name: vscode-oniguruma

        buildSteps:
          - script: git submodule init
          - script: git submodule update

          - script: |
              ./build/setup-emsdk.sh
              echo "##vso[task.setvariable variable=PATH;]${PATH}"
              echo "##vso[task.setvariable variable=EMSDK;]${EMSDK}"
              echo "##vso[task.setvariable variable=EMSDK_NODE;]${EMSDK_NODE}"
            displayName: Setup emsdk
          # - script: echo '##vso[task.prependpath]/opt/dev/emsdk/upstream/emscripten'
          # - script: echo '##vso[task.prependpath]/opt/dev/emsdk'

          - script: npm ci
            displayName: Install dependencies

          - script: npm run build-onig
            displayName: Build oniguruma

          - script: npm run build-wasm
            displayName: Build wasm

          - script: npm run package
            displayName: Bundle

        testPlatforms:
          - name: Linux
            nodeVersions:
              - 18.x

        testSteps:
          - script: git submodule init
          - script: git submodule update

          - script: |
              ./build/setup-emsdk.sh
              echo "##vso[task.setvariable variable=PATH;]${PATH}"
              echo "##vso[task.setvariable variable=EMSDK;]${EMSDK}"
              echo "##vso[task.setvariable variable=EMSDK_NODE;]${EMSDK_NODE}"
            displayName: Setup emsdk
          # - script: echo '##vso[task.prependpath]/opt/dev/emsdk/upstream/emscripten'
          # - script: echo '##vso[task.prependpath]/opt/dev/emsdk'

          - script: npm ci
            displayName: Install dependencies

          - script: npm run build-onig
            displayName: Build oniguruma

          - script: cat deps/oniguruma/config.log
            condition: always()
            displayName: Troubleshoot config.log

          - script: npm run build-wasm
            displayName: Build wasm

          - script: npm run build-tsc
            displayName: Compile

          - script: npm test
            displayName: Test

        # Package does not build on Windows and was manually verified.
        skipAPIScan: 'true'

        publishPackage: ${{ parameters.publishPackage }}
